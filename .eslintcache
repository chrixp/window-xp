[{"/home/chrisphan/Work/window-xp/src/index.js":"1","/home/chrisphan/Work/window-xp/src/reportWebVitals.js":"2","/home/chrisphan/Work/window-xp/src/components/task-bar.js":"3","/home/chrisphan/Work/window-xp/src/components/desktop-icon.js":"4","/home/chrisphan/Work/window-xp/src/image-link.js":"5","/home/chrisphan/Work/window-xp/src/context.js":"6","/home/chrisphan/Work/window-xp/src/stores/application-store.js":"7","/home/chrisphan/Work/window-xp/src/components/application.js":"8","/home/chrisphan/Work/window-xp/src/components/task-bar-icon.js":"9","/home/chrisphan/Work/window-xp/src/pages/LoadingScreen.js":"10","/home/chrisphan/Work/window-xp/src/pages/SignInScreen.js":"11","/home/chrisphan/Work/window-xp/src/router.js":"12","/home/chrisphan/Work/window-xp/src/pages/HomeScreen.js":"13","/home/chrisphan/Work/window-xp/src/consts.js":"14","/home/chrisphan/Work/window-xp/src/components/title-bar.js":"15","/home/chrisphan/Work/window-xp/src/components/tool-bar.js":"16","/home/chrisphan/Work/window-xp/src/components/menu.js":"17","/home/chrisphan/Work/window-xp/src/components/error.js":"18","/home/chrisphan/Work/window-xp/src/components/clickable-app.js":"19","/home/chrisphan/Work/window-xp/src/components/computer-search-bar.js":"20","/home/chrisphan/Work/window-xp/src/run-virus.js":"21","/home/chrisphan/Work/window-xp/src/components/computer-content.js":"22","/home/chrisphan/Work/window-xp/src/applications/virus.js":"23","/home/chrisphan/Work/window-xp/src/applications/computer.js":"24","/home/chrisphan/Work/window-xp/src/applications/notepad.js":"25","/home/chrisphan/Work/window-xp/src/utils/consumify-object.js":"26","/home/chrisphan/Work/window-xp/src/applications/image.js":"27"},{"size":550,"mtime":1609703071533,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1609622793842,"results":"30","hashOfConfig":"29"},{"size":3310,"mtime":1609887134917,"results":"31","hashOfConfig":"29"},{"size":1397,"mtime":1609860730368,"results":"32","hashOfConfig":"29"},{"size":113,"mtime":1609861223692,"results":"33","hashOfConfig":"29"},{"size":444,"mtime":1609885356167,"results":"34","hashOfConfig":"29"},{"size":5444,"mtime":1609886887022,"results":"35","hashOfConfig":"29"},{"size":3129,"mtime":1609887457276,"results":"36","hashOfConfig":"29"},{"size":1340,"mtime":1609884425004,"results":"37","hashOfConfig":"29"},{"size":1629,"mtime":1609882889203,"results":"38","hashOfConfig":"29"},{"size":2511,"mtime":1609884550680,"results":"39","hashOfConfig":"29"},{"size":647,"mtime":1609703165977,"results":"40","hashOfConfig":"29"},{"size":2442,"mtime":1609887764743,"results":"41","hashOfConfig":"29"},{"size":5277,"mtime":1609887176557,"results":"42","hashOfConfig":"29"},{"size":837,"mtime":1609886815194,"results":"43","hashOfConfig":"29"},{"size":621,"mtime":1609812822406,"results":"44","hashOfConfig":"29"},{"size":4606,"mtime":1609886941913,"results":"45","hashOfConfig":"29"},{"size":1758,"mtime":1609886508378,"results":"46","hashOfConfig":"29"},{"size":998,"mtime":1609860699512,"results":"47","hashOfConfig":"29"},{"size":2984,"mtime":1609878883503,"results":"48","hashOfConfig":"29"},{"size":8838,"mtime":1609814605568,"results":"49","hashOfConfig":"29"},{"size":904,"mtime":1609884735423,"results":"50","hashOfConfig":"29"},{"size":2889,"mtime":1609891288258,"results":"51","hashOfConfig":"29"},{"size":3474,"mtime":1609887251993,"results":"52","hashOfConfig":"29"},{"size":403,"mtime":1609878976795,"results":"53","hashOfConfig":"29"},{"size":217,"mtime":1609862991635,"results":"54","hashOfConfig":"29"},{"size":291,"mtime":1609871286502,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"e1huxo",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/chrisphan/Work/window-xp/src/index.js",[],["116","117"],"/home/chrisphan/Work/window-xp/src/reportWebVitals.js",[],"/home/chrisphan/Work/window-xp/src/components/task-bar.js",[],"/home/chrisphan/Work/window-xp/src/components/desktop-icon.js",[],"/home/chrisphan/Work/window-xp/src/image-link.js",[],"/home/chrisphan/Work/window-xp/src/context.js",[],"/home/chrisphan/Work/window-xp/src/stores/application-store.js",[],"/home/chrisphan/Work/window-xp/src/components/application.js",["118"],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport Draggable from 'react-draggable'\nimport TitleBar from './title-bar'\nimport Toolbar from './tool-bar'\nimport { useStore } from '@src/context'\nimport { observer} from 'mobx-react-lite'\nimport Computer from '@applications/computer'\nimport Virus from '@applications/virus'\nimport Notepad from '@applications/notepad'\nimport Image from '@applications/image'\nimport { APP_TYPES } from '@src/consts'\nimport \"xp.css/dist/XP.css\"\nimport \"./draggable.css\"\n\nconst ApplicationContainer = styled.div`\n    display: ${props => props.minimized === true ? 'none' : 'flex'};\n    z-index: 7;\n    flex-direction: column;\n    height:${props => props.maximized ? \"96.2%\" : \"70%\"};\n    width: ${props => props.maximized ? \"100%\" : \"70%\"};\n    .window {\n        padding: 0;\n        box-shadow: none;\n        border: none;\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        .title-bar {\n            font-family: Noto;\n            padding: 0;\n            padding-right: 10px;\n            height: 35px;\n            &:hover {\n                cursor: pointer;\n            }\n            .title-bar-text {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                \n            }\n        }\n        .window-body {\n            border: 3px solid #003bda;\n            border-top: none;\n            margin: 0;\n            display: flex;\n            flex-direction: column;\n            flex: 1;\n            overflow: hidden;\n        }\n    }\n`\nconst IFrame = styled.iframe`\n    width: calc(100% - 7px);\n    height: 100%;\n    border: none;\n    margin: 0 3px;\n`\n\nconst Application = observer((props) => {    \n    const { ApplicationStore } = useStore()\n\n    useEffect(() => {\n        ApplicationStore.setTopElement(props.id)\n    }, [])\n\n    const renderApplication = () => {\n        switch (props.type) {\n            case APP_TYPES.WIDGET:\n                return <IFrame src={props.link} />\n            case APP_TYPES.IMAGE:\n                return <Image {...props} />\n            case APP_TYPES.NOTEPAD:\n                return <Notepad />\n            case APP_TYPES.VIRUS:\n                return <Virus />\n            case APP_TYPES.COMPUTER:\n                return <Computer />\n            default:\n                return null\n            }\n    }\n    return ( \n        <Draggable \n            disabled={props.resized}\n            position={props.position}>\n            <ApplicationContainer\n                onClick={() => ApplicationStore.setTopElement(props.id)}\n                className={props.id}\n                minimized={props.minimized} \n                maximized={props.resized}>\n                <div className=\"window\"> \n                    <TitleBar {...props} />\n                    <div className=\"window-body\">\n                        {props.bars && <Toolbar bars={props.bars} />}\n                        {renderApplication()}\n                    </div>\n                </div>\n            </ApplicationContainer>\n        </Draggable>\n    )\n})\n\nexport default Application","/home/chrisphan/Work/window-xp/src/components/task-bar-icon.js",[],"/home/chrisphan/Work/window-xp/src/pages/LoadingScreen.js",[],"/home/chrisphan/Work/window-xp/src/pages/SignInScreen.js",[],"/home/chrisphan/Work/window-xp/src/router.js",[],"/home/chrisphan/Work/window-xp/src/pages/HomeScreen.js",["119"],"import React, { useEffect } from 'react'\nimport Wallpaper from '@images/wallpaper.jpg'\nimport styled from 'styled-components'\nimport Taskbar from '@components/task-bar'\nimport DesktopIcon from '@components/desktop-icon'\nimport Application from '@components/application'\nimport Error from '@components/error'\nimport WindowStartupSound from '@sounds/windows-xp-startup.mp3'\nimport { useStore } from '@src/context'\nimport { observer} from 'mobx-react-lite'\nimport { runInAction } from 'mobx'\nimport { isMobile } from 'react-device-detect'\n\nconst warningMessage = \"Your access is restricted on a mobile device. You are not allowed to use laptop icons and can only open one application at a time through the menu. Navigate to laptop for full access\"\nconst HomeScreenContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n`\n\nconst WallpaperContainer = styled.div`\n    z-index: 1;\n    background-image: url(${Wallpaper});\n    background-size: cover;\n    width: 100%;\n    flex: 1;\n`\n\nconst HomeScreen = observer(() => {\n    const { ApplicationStore } = useStore()\n    const { visibleApps, openApps } = ApplicationStore\n    \n    useEffect(() => {\n        (async () => {\n            const sound = new Audio(WindowStartupSound)\n            await sound.play()\n\n            if(isMobile) {\n                runInAction(() => {\n                    ApplicationStore.openMessage(warningMessage, 'warning')\n                })\n            }\n        })()\n    }, [])\n\n\n\n    return (\n        <HomeScreenContainer>\n            <Error />\n            <WallpaperContainer onClick={ApplicationStore.resetUI} />\n            {visibleApps.map((application) => (\n                <DesktopIcon \n                    key={application.key}\n                    onClick={() => ApplicationStore.onClick(application.key)}\n                    {...application} />))}\n            {openApps.map((application) => (\n                <Application\n                    id={application.key}\n                    minimize={() => ApplicationStore.minimizeApplication(application.key)} \n                    resize={() => ApplicationStore.resize(application.key)}\n                    close={() => ApplicationStore.closeApplication(application.key)}\n                    {...application}\n                />\n            ))} \n            <Taskbar openApplications={openApps} />\n        </HomeScreenContainer>\n      );\n})\n  \n\nexport default HomeScreen;\n","/home/chrisphan/Work/window-xp/src/consts.js",[],"/home/chrisphan/Work/window-xp/src/components/title-bar.js",[],"/home/chrisphan/Work/window-xp/src/components/tool-bar.js",[],"/home/chrisphan/Work/window-xp/src/components/menu.js",["120"],"import styled from 'styled-components'\nimport Chess from '@images/chess.jpg'\nimport MenuTopPicture from '@images/menu-top.png'\nimport ShutdownIcon from '@images/shutdown-icon.png'\nimport LogoffIcon from '@images/logoff-icon.png'\nimport RestartIcon from '@images/restart-icon.ico'\nimport ClickableApp from './clickable-app'\nimport { menuApplications } from '@src/consts'\nimport { useStore } from '@src/context'\nimport { observer} from 'mobx-react-lite'\nimport Application from './application'\n\nconst UserImage = styled.img`\n    width: 45px;\n    height: 45px;\n    object-fit: contain;\n    border: 2px solid rgba(255,255,255,0.6);\n    border-radius: 5px;\n` \nconst UserName = styled.span`\n    font-weight: bold;\n    font-size: 15px;\n    color: white;\n    margin-left: 10px;\n`\n\nconst MenuTop = styled.div`\n    overflow: hidden;\n    display: flex;\n    height: 12%;\n    flex-direction: row;\n    align-items: center;\n    padding: 8px;\n    background: url(${MenuTopPicture}) no-repeat;\n    background-size: 100% 100%; \n    \n`\nconst MenuBottom = styled.div`\n    background: linear-gradient(rgb(66, 130, 214) 0%, rgb(59, 133, 224) 3%, rgb(65, 138, 227) 5%, rgb(65, 138, 227) 17%, rgb(60, 135, 226) 21%, rgb(55, 134, 228) 26%, rgb(52, 130, 227) 29%, rgb(46, 126, 225) 39%, rgb(35, 116, 223) 49%, rgb(32, 114, 219) 57%, rgb(25, 110, 219) 62%, rgb(23, 107, 216) 72%, rgb(20, 104, 213) 75%, rgb(17, 101, 210) 83%, rgb(15, 97, 203) 88%);\n    overflow: hidden;\n    display: flex;\n    height: 8%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n`\n\nconst MenuContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n`\n\nconst MenuContentLeft = styled.div`\n    background-color: white;\n    flex-basis: 50%;\n    display: flex;\n    flex-direction: column;\n`\n\nconst MenuContentRight = styled(MenuContentLeft)`\n    background-color: white;\n    flex-basis: 50%;\n    display: flex;\n    flex-direction: column;\n    background-color: rgb(203, 227, 255);\n    > div:hover {\n        cursor: not-allowed;\n    }\n`\n\nconst MenuContainer = styled.div`\n    overflow: hidden;\n    border-radius: 6px 6px 0 0;\n    box-shadow: rgba(0, 0, 0, 0.5) 2px 4px 2px;\n    background-color: rgb(66, 130, 214);\n    position: absolute;\n    bottom: 100%;\n    background-color: white;\n    left: 2px;\n    z-index: 99;\n    display: flex;\n    flex-direction: column;\n`\n\nconst MenuBottomButton = styled.div`\n    padding: 7px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    color: white;\n    font-size: 12px;\n    > img {\n        width: 28px;\n    }\n    &:hover {\n        cursor: pointer;\n        opacity: 0.8;\n    }\n`\n\nconst MenuItemImage = styled.img`\n    margin-right: 8px;\n    width: 35px;\n    height: auto;\n    object-fit: contain;\n`\n\nconst Menu = observer(() => {\n    const { ApplicationStore } = useStore()\n\n    const restartPage = () => {\n        window.location.href = window.location.origin\n    }\n\n    return (\n        <MenuContainer>\n            <MenuTop>\n                <UserImage src={Chess} />\n                <UserName>Chris Phan</UserName>\n            </MenuTop>\n            <MenuContent>\n                <MenuContentLeft>\n                    {ApplicationStore.menuApps.map(application => (\n                       <ClickableApp \n                         onClick={() => ApplicationStore.openApplication(application.key)}\n                         {...application} />\n                    ))}\n                </MenuContentLeft>\n                <MenuContentRight>\n                    {menuApplications.map(application => (\n                        <ClickableApp\n                          onClick={() => ApplicationStore.openMessage()}\n                          {...application}\n                        /> \n                    ))}\n                </MenuContentRight>\n            </MenuContent>\n            <MenuBottom>\n                <MenuBottomButton>\n                    <MenuItemImage \n                        onClick={() => ApplicationStore.openMessage()}\n                        src={LogoffIcon} />\n                    <span>Log off</span>\n                </MenuBottomButton>\n                <MenuBottomButton onClick={() => ApplicationStore.openMessage()}>\n                    <MenuItemImage src={ShutdownIcon} />\n                    <span>Shut down</span>\n                </MenuBottomButton>\n                <MenuBottomButton onClick={() => restartPage()}>\n                    <MenuItemImage src={RestartIcon} />\n                    <span>Restart</span>\n                </MenuBottomButton>\n            </MenuBottom>\n        </MenuContainer>\n    )\n})\n\nexport default Menu","/home/chrisphan/Work/window-xp/src/components/error.js",[],"/home/chrisphan/Work/window-xp/src/components/clickable-app.js",[],"/home/chrisphan/Work/window-xp/src/components/computer-search-bar.js",[],"/home/chrisphan/Work/window-xp/src/run-virus.js",["121"],"const runVirus = () => {\n    var canvas = document.querySelector(\".hacker-3d-shiz\"),\n    ctx = canvas.getContext(\"2d\"),\n    canvasBars = document.querySelector(\".bars-and-stuff\"),\n    ctxBars = canvasBars.getContext(\"2d\"),\n    outputConsole = document.querySelector(\".output-console\");\n\n    canvas.width = (window.innerWidth/3)*2;\n    canvas.height = window.innerHeight / 3;\n\n    canvasBars.width = window.innerWidth/3;\n    canvasBars.height = canvas.height;\n\n    outputConsole.style.height = (window.innerHeight / 3) * 2 + 'px';\n    outputConsole.style.top = window.innerHeight / 3 + 'px'\n\n\n    /* Graphics stuff */\n    function Square(z) {\n        this.width = canvas.width/2;\n        \n        if(canvas.height < 200){\n        this.width = 200;\n        };\n    \n        this.height = canvas.height;\n        z = z || 0;\n\n        this.points = [\n        new Point({\n            x: (canvas.width / 2) - this.width,\n            y: (canvas.height / 2) - this.height,\n            z: z\n        }),\n        new Point({\n            x: (canvas.width / 2) + this.width,\n            y: (canvas.height / 2) - this.height,\n            z: z\n        }),\n        new Point({\n            x: (canvas.width / 2) + this.width,\n            y: (canvas.height / 2) + this.height,\n            z: z\n        }),\n        new Point({\n            x: (canvas.width / 2) - this.width,\n            y: (canvas.height / 2) + this.height,\n            z: z\n        })];\n        this.dist = 0;\n    }\n\n    Square.prototype.update = function () {\n        for (var p = 0; p < this.points.length; p++) {\n            this.points[p].rotateZ(0.001);\n            this.points[p].z -= 3;\n            if (this.points[p].z < -300) {\n                this.points[p].z = 2700;\n            }\n            this.points[p].map2D();\n        }\n    }\n\n    Square.prototype.render = function () {\n        ctx.beginPath();\n        ctx.moveTo(this.points[0].xPos, this.points[0].yPos);\n        for (var p = 1; p < this.points.length; p++) {\n            if (this.points[p].z > -(focal - 50)) {\n                ctx.lineTo(this.points[p].xPos, this.points[p].yPos);\n            }\n        }\n\n        ctx.closePath();\n        ctx.stroke();\n\n        this.dist = this.points[this.points.length - 1].z;\n\n    };\n\n    function Point(pos) {\n        this.x = pos.x - canvas.width / 2 || 0;\n        this.y = pos.y - canvas.height / 2 || 0;\n        this.z = pos.z || 0;\n\n        this.cX = 0;\n        this.cY = 0;\n        this.cZ = 0;\n\n        this.xPos = 0;\n        this.yPos = 0;\n        this.map2D();\n    }\n\n    Point.prototype.rotateZ = function (angleZ) {\n        var cosZ = Math.cos(angleZ),\n            sinZ = Math.sin(angleZ),\n            x1 = this.x * cosZ - this.y * sinZ,\n            y1 = this.y * cosZ + this.x * sinZ;\n\n        this.x = x1;\n        this.y = y1;\n    }\n\n    Point.prototype.map2D = function () {\n        var scaleX = focal / (focal + this.z + this.cZ),\n            scaleY = focal / (focal + this.z + this.cZ);\n\n        this.xPos = vpx + (this.cX + this.x) * scaleX;\n        this.yPos = vpy + (this.cY + this.y) * scaleY;\n    };\n\n    // Init graphics stuff\n    var squares = [],\n        focal = canvas.width / 2,\n        vpx = canvas.width / 2,\n        vpy = canvas.height / 2,\n        barVals = [],\n        sineVal = 0;\n\n    /* fake console stuff */\n    var commandStart = ['Performing DNS Lookups for', \n                    'Searching ', \n                    'Analyzing ', \n                    'Estimating Approximate Location of ', \n                    'Compressing ', \n                    'Requesting Authorization From : ', \n                    'wget -a -t ', \n                    'tar -xzf ', \n                    'Entering Location ', \n                    'Compilation Started of ',\n                    'Downloading '],\n        commandParts = ['Data Structure', \n                        'http://wwjd.com?au&2', \n                        'Texture', \n                        'TPS Reports', \n                        ' .... Searching ... ', \n                        'http://zanb.se/?23&88&far=2', \n                        'http://ab.ret45-33/?timing=1ww'],\n        commandResponses = ['Authorizing ', \n                    'Authorized...', \n                    'Access Granted..', \n                    'Going Deeper....', \n                    'Compression Complete.', \n                    'Compilation of Data Structures Complete..', \n                    'Entering Security Console...', \n                    'Encryption Unsuccesful Attempting Retry...', \n                    'Waiting for response...', \n                    '....Searching...', \n                    'Calculating Space Requirements '\n                    ],\n        isProcessing = false,\n        processTime = 0,\n        lastProcess = 0;\n\n\n    function render() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        squares.sort(function (a, b) {\n            return b.dist - a.dist;\n        });\n        for (var i = 0, len = squares.length; i < len; i++) {\n            squares[i].update();\n            squares[i].render();\n        }\n        \n        ctxBars.clearRect(0, 0, canvasBars.width, canvasBars.height);\n        \n        ctxBars.beginPath();\n        var y = canvasBars.height/6;\n        ctxBars.moveTo(0,y);\n        \n        for(i = 0; i < canvasBars.width; i++){\n            var ran = (Math.random()*20)-10;\n            if(Math.random() > 0.98){\n                ran = (Math.random()*50)-25   \n            }\n            ctxBars.lineTo(i, y + ran);\n        }\n        \n        ctxBars.stroke();\n        \n        for(i = 0; i < canvasBars.width; i+=20){\n            if(!barVals[i]){\n                barVals[i] = {\n                    val : Math.random()*(canvasBars.height/2),\n                    freq : 0.1,\n                    sineVal : Math.random()*100\n                };\n            }\n            \n            barVals[i].sineVal+=barVals[i].freq;\n            barVals[i].val+=Math.sin(barVals[i].sineVal*Math.PI/2)*5;\n            ctxBars.fillRect(i+5,canvasBars.height,15,-barVals[i].val);\n        }\n        \n        requestAnimationFrame(render);\n    }\n\n    function consoleOutput(){\n        var textEl = document.createElement('p');\n        \n        if(isProcessing){\n            textEl = document.createElement('span');\n            textEl.textContent += Math.random() + \" \";\n            if(Date.now() > lastProcess + processTime){\n                isProcessing = false;   \n            }\n        }else{\n            var commandType = ~~(Math.random()*4);\n            switch(commandType){\n                case 0:\n                    textEl.textContent = commandStart[~~(Math.random()*commandStart.length)] + commandParts[~~(Math.random()*commandParts.length)];\n                    break;\n                case 3: \n                    isProcessing = true;\n                    processTime = ~~(Math.random()*5000);\n                    lastProcess = Date.now();\n                    break;\n                default:\n                    textEl.textContent = commandResponses[~~(Math.random()*commandResponses.length)];\n            }\n        }\n\n        outputConsole.scrollTop = outputConsole.scrollHeight;\n        outputConsole.appendChild(textEl);\n        \n        if (outputConsole.scrollHeight > window.innerHeight) {\n        var removeNodes = outputConsole.querySelectorAll('*');\n        for(var n = 0; n < ~~(removeNodes.length/3); n++){\n                outputConsole.removeChild(removeNodes[n]);\n            }\n        }\n        \n        setTimeout(consoleOutput, ~~(Math.random()*200));\n    }\n\n\n    setTimeout(function(){   \n        canvas.width = (window.innerWidth/3)*2;\n        canvas.height = window.innerHeight / 3;\n\n        canvasBars.width = window.innerWidth/3;\n        canvasBars.height = canvas.height;\n\n        outputConsole.style.height = (window.innerHeight / 3) * 2 + 'px';\n        outputConsole.style.top = window.innerHeight / 3 + 'px';\n    \n        focal = canvas.width / 2;\n        vpx = canvas.width / 2;\n        vpy = canvas.height / 2;\n\n        for (var i = 0; i < 15; i++) {\n            squares.push(new Square(-300 + (i * 200)));\n        }\n    \n        ctx.strokeStyle = ctxBars.strokeStyle = ctxBars.fillStyle = '#00FF00';\n    \n        render();\n        consoleOutput();\n    }, 200);\n\n    window.addEventListener('resize', function(){\n        canvas.width = (window.innerWidth/3)*2;\n        canvas.height = window.innerHeight / 3;\n\n        canvasBars.width = window.innerWidth/3;\n        canvasBars.height = canvas.height;\n\n        outputConsole.style.height = (window.innerHeight / 3) * 2 + 'px';\n        outputConsole.style.top = window.innerHeight / 3 + 'px';\n    \n        focal = canvas.width / 2;\n        vpx = canvas.width / 2;\n        vpy = canvas.height / 2;\n        ctx.strokeStyle = ctxBars.strokeStyle = ctxBars.fillStyle = '#00FF00';\n    });\n}\n\nexport default runVirus","/home/chrisphan/Work/window-xp/src/components/computer-content.js",[],"/home/chrisphan/Work/window-xp/src/applications/virus.js",["122"],"/home/chrisphan/Work/window-xp/src/applications/computer.js",["123"],"import styled, { css } from 'styled-components'\nimport ComputerSearchBar from '@components/computer-search-bar'\nimport ComputerContent from '@components/computer-content'\nimport imageLink from '@src/image-link'\nimport { useStore } from '@src/context'\nimport { observer} from 'mobx-react-lite'\nimport Application from '../components/application'\n\n\nconst TopBarContainer = styled.div`\n    display: flex;\n    flex-diretion: row;\n    height: 50px;\n    background-color: rgb(236, 233, 216);\n    border-top: 1px solid rgba(0, 0, 0, 0.3);\n`\n\nconst TopBarIconContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 5px;\n    margin: 5px;\n    > img {\n        margin-right: 3px;\n        width: 30px; \n    }\n    > span {\n        font-size: 13px;\n    }\n    opacity: 0.5;\n\n    ${props => props.rotated === true && css`\n        > img {\n            margin-right: 0px;\n            transform: rotate(180deg);\n        }\n    `}\n    ${props => props.arrow === true && css`\n        &::after {\n            content: \"\";\n            display: block;\n            margin-left: 5px;\n            border-width: 3px 3px 0px;\n            border-color: rgb(0, 0, 0) transparent;\n            border-style: solid;\n        }\n    `}\n\n    ${props => props.border === true && css`\n        border-left: 1px solid rgba(0, 0, 0, 0.2);\n    `}\n\n    ${props => props.clickable === true && css`\n        opacity: 1;\n        &:hover {\n            cursor: pointer;\n            background-color: rgb(222, 222, 222);\n            box-shadow: rgba(0, 0, 0, 0.1) 0px -1px 1px inset;\n            border-width: 1px;\n            border-style: solid;\n            border-color: rgba(0, 0, 0, 0.1);\n            border-image: initial;\n        }\n    `}\n`\n\nconst ComputerContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    background-color: white;\n    width: 100%;\n    height: 100%;\n`\n\n\nconst Computer =  observer(() => {\n    const { ApplicationStore } = useStore()\n    const topBarIcons = [\n        {\n            img: 'arrow.png',\n            desc: 'Back',\n            arrow: true,\n            clickable: ApplicationStore.back !== null,\n            onClick: () => ApplicationStore.goBack()\n\n        },\n        {\n            img: 'arrow.png',\n            rotated: true,\n            arrow: true,\n            clickable: ApplicationStore.next !== null,\n            onClick: () => ApplicationStore.goNext()\n        },\n        {\n            img: 'search.png',\n            desc: 'Search',\n            border: true,\n            clickable: false\n        },\n        {\n            img: 'folder.png',\n            desc: 'Folders',\n            border: true,\n            clickable: false\n        },\n        {\n            img: 'big-folder.png',\n            arrow: true,\n            border: true,\n            clickable: false\n        }\n    \n    ]\n    return (\n        <ComputerContainer>\n            <TopBarContainer>\n                <TopBarContainer>\n                    {topBarIcons.map(icon => (\n                        <TopBarIconContainer {...icon}>\n                            <img src={imageLink(icon.img)} alt={icon.desc} />\n                            <span>{icon.desc}</span>\n                        </TopBarIconContainer>\n                    ))}\n                </TopBarContainer>\n            </TopBarContainer>\n            <ComputerSearchBar />\n            <ComputerContent />\n        </ComputerContainer>\n    )\n})\n\nexport default Computer;","/home/chrisphan/Work/window-xp/src/applications/notepad.js",[],"/home/chrisphan/Work/window-xp/src/utils/consumify-object.js",[],"/home/chrisphan/Work/window-xp/src/applications/image.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":67,"column":8,"nodeType":"130","endLine":67,"endColumn":10,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":45,"column":8,"nodeType":"130","endLine":45,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":19},{"ruleId":"134","severity":1,"message":"138","line":118,"column":9,"nodeType":"136","messageId":"137","endLine":118,"endColumn":16},{"ruleId":"128","severity":1,"message":"139","line":103,"column":7,"nodeType":"130","endLine":103,"endColumn":24,"suggestions":"140"},{"ruleId":"134","severity":1,"message":"135","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":19},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ApplicationStore' and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'ApplicationStore'. Either include it or remove the dependency array.",["144"],"no-unused-vars","'Application' is defined but never used.","Identifier","unusedVar","'sineVal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ApplicationStore' and 'generateViruses'. Either include them or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [ApplicationStore, props.id]",{"range":"152","text":"153"},"Update the dependencies array to be: [ApplicationStore]",{"range":"154","text":"155"},"Update the dependencies array to be: [viruses, played, ApplicationStore, generateViruses]",{"range":"156","text":"157"},[1875,1877],"[ApplicationStore, props.id]",[1492,1494],"[ApplicationStore]",[2488,2505],"[viruses, played, ApplicationStore, generateViruses]"]